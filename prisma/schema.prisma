// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cardapio {
  id                Int             @id @default(autoincrement())
  nome              String
  descricao         Int
  estabelecimento   Estabelecimento @relation(fields: [idEstabelecimento], references: [id])
  idEstabelecimento Int
}

model Estabelecimento {
  id                   Int        @id @default(autoincrement())
  nome                 String
  cnpj                 Int        @unique
  email                String     @unique
  senha                String     @unique
  telefone             Int
  endereco             String
  horario              Int
  tipo_estabelecimento String
  Cardapio             Cardapio[]
  Mesa                 Mesa[]
  Pedidos              Pedido[]
  Cliente              Cliente[]
}

model Mesa {
  id                Int             @id @default(autoincrement())
  numero            Int
  capacidade        Int
  estabelecimento   Estabelecimento @relation(fields: [idEstabelecimento], references: [id])
  idEstabelecimento Int
  Pedidos           Pedido[]
}

model Categoria {
  id        Int       @id @default(autoincrement())
  descricao String
  Produto   Produto[]
}

model Pedido {
  id                Int             @id @default(autoincrement())
  data              Int
  hora              Int
  status            String
  estabelecimento   Estabelecimento @relation(fields: [idEstabelecimento], references: [id])
  idEstabelecimento Int
  mesa              Mesa            @relation(fields: [idMesa], references: [id])
  idMesa            Int
  produtos          PedidoProduto[]
}

model Produto {
  id          Int             @id @default(autoincrement())
  nome        String
  descricao   String
  preco       Int
  imagem      String
  categoria   Categoria       @relation(fields: [idCategoria], references: [id])
  idCategoria Int
  pedidos     PedidoProduto[]
}

model PedidoProduto {
  id         Int     @id @default(autoincrement())
  produto    Produto @relation(fields: [produtoId], references: [id])
  produtoId  Int
  pedido     Pedido  @relation(fields: [pedidoId], references: [id])
  pedidoId   Int
  quantidade Int
}

enum TipoCliente {
  PF // Pessoa Física
  PJ // Pessoa Jurídica
}

enum TipoEstabelecimento {
  Sorveteria
  Restaurante
  Lanchonete
  Pesqueiro
  Bar
  Pizzaria
}

model Cliente {
  id                   Int                 @id @default(autoincrement())
  nome                 String
  tipo                 TipoCliente
  documento            String              @unique
  email                String              @unique
  senha                String              @unique
  telefone             String
  endereco             String
  data_criacao         Int
  status               String
  estabelecimento      Estabelecimento     @relation(fields: [idEstabelecimento], references: [id])
  idEstabelecimento    Int
  tipo_estabelecimento TipoEstabelecimento
}
